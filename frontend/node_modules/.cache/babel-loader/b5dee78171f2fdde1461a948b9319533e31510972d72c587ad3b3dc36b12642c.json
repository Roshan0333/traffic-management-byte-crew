{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gulsan\\\\Desktop\\\\AIML\\\\ha\\\\smart-traffic-management\\\\smart-traffic-management\\\\frontend\\\\src\\\\components\\\\MapView.js\";\nimport React from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getIconColor = level => {\n  if (level > 70) return 'red'; // High congestion\n  if (level > 30) return 'yellow'; // Medium congestion\n  return 'green'; // Low congestion\n};\nconst MapView = ({\n  trafficData\n}) => {\n  // Define points of interest or specific markers\n  const specificPoints = [{\n    latitude: 28.6139,\n    longitude: 77.2090,\n    label: 'Central Point',\n    level: 50\n  }, {\n    latitude: 28.6140,\n    longitude: 77.2100,\n    label: 'Secondary Point',\n    level: 80\n  }\n  // Add more specific points as needed\n  ];\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [28.6139, 77.2090],\n    zoom: 12,\n    style: {\n      height: '500px',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href='https://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), trafficData.map((data, index) => {\n      const {\n        predicted_congestion_level,\n        latitude,\n        longitude\n      } = data;\n      const color = getIconColor(predicted_congestion_level);\n      const icon = L.divIcon({\n        className: 'custom-icon',\n        html: `<div style=\"background-color: ${color}; width: 20px; height: 20px; border-radius: 50%;\"></div>`,\n        iconSize: [20, 20]\n      });\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        position: [latitude, longitude],\n        icon: icon,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Congestion Level: \", predicted_congestion_level]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this);\n    }), specificPoints.map((point, index) => {\n      const icon = L.divIcon({\n        className: 'specific-icon',\n        html: `<div style=\"background-color: blue; width: 25px; height: 25px; border-radius: 50%;\"></div>`,\n        iconSize: [25, 25]\n      });\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        position: [point.latitude, point.longitude],\n        icon: icon,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [point.label, \" - Congestion Level: \", point.level]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_c = MapView;\nexport default MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","MapContainer","TileLayer","Marker","Popup","L","jsxDEV","_jsxDEV","getIconColor","level","MapView","trafficData","specificPoints","latitude","longitude","label","center","zoom","style","height","width","children","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","map","data","index","predicted_congestion_level","color","icon","divIcon","className","html","iconSize","position","point","_c","$RefreshReg$"],"sources":["C:/Users/Gulsan/Desktop/AIML/ha/smart-traffic-management/smart-traffic-management/frontend/src/components/MapView.js"],"sourcesContent":["import React from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\nconst getIconColor = (level) => {\r\n    if (level > 70) return 'red'; // High congestion\r\n    if (level > 30) return 'yellow'; // Medium congestion\r\n    return 'green'; // Low congestion\r\n};\r\n\r\nconst MapView = ({ trafficData }) => {\r\n    // Define points of interest or specific markers\r\n    const specificPoints = [\r\n        { latitude: 28.6139, longitude: 77.2090, label: 'Central Point', level: 50 },\r\n        { latitude: 28.6140, longitude: 77.2100, label: 'Secondary Point', level: 80 },\r\n        // Add more specific points as needed\r\n    ];\r\n\r\n    return (\r\n        <MapContainer center={[28.6139, 77.2090]} zoom={12} style={{ height: '500px', width: '100%' }}>\r\n            <TileLayer\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                attribution=\"&copy; <a href='https://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors\"\r\n            />\r\n            {trafficData.map((data, index) => {\r\n                const { predicted_congestion_level, latitude, longitude } = data;\r\n                const color = getIconColor(predicted_congestion_level);\r\n                const icon = L.divIcon({\r\n                    className: 'custom-icon',\r\n                    html: `<div style=\"background-color: ${color}; width: 20px; height: 20px; border-radius: 50%;\"></div>`,\r\n                    iconSize: [20, 20],\r\n                });\r\n\r\n                return (\r\n                    <Marker key={index} position={[latitude, longitude]} icon={icon}>\r\n                        <Popup>\r\n                            <span>Congestion Level: {predicted_congestion_level}</span>\r\n                        </Popup>\r\n                    </Marker>\r\n                );\r\n            })}\r\n\r\n            {/* Render specific marker points */}\r\n            {specificPoints.map((point, index) => {\r\n                const icon = L.divIcon({\r\n                    className: 'specific-icon',\r\n                    html: `<div style=\"background-color: blue; width: 25px; height: 25px; border-radius: 50%;\"></div>`,\r\n                    iconSize: [25, 25],\r\n                });\r\n\r\n                return (\r\n                    <Marker key={index} position={[point.latitude, point.longitude]} icon={icon}>\r\n                        <Popup>\r\n                            <span>{point.label} - Congestion Level: {point.level}</span>\r\n                        </Popup>\r\n                    </Marker>\r\n                );\r\n            })}\r\n        </MapContainer>\r\n    );\r\n};\r\n\r\nexport default MapView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}