{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rashi\\\\smart-traffic-management\\\\frontend\\\\src\\\\components\\\\MapView.js\",\n  _s = $RefreshSig$();\n// src/components/MapView.js\n\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\n// Set the default icon for the markers\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\n// Define bounding boxes for various states in India\nconst stateBoundaries = {\n  \"Andhra Pradesh\": {\n    latMin: 13.0,\n    latMax: 19.0,\n    lngMin: 80.0,\n    lngMax: 84.0\n  },\n  \"Maharashtra\": {\n    latMin: 15.0,\n    latMax: 24.0,\n    lngMin: 72.0,\n    lngMax: 80.0\n  },\n  \"Uttar Pradesh\": {\n    latMin: 26.0,\n    latMax: 31.0,\n    lngMin: 78.0,\n    lngMax: 84.0\n  },\n  \"West Bengal\": {\n    latMin: 21.0,\n    latMax: 27.0,\n    lngMin: 85.0,\n    lngMax: 89.0\n  },\n  \"Tamil Nadu\": {\n    latMin: 8.0,\n    latMax: 14.0,\n    lngMin: 77.0,\n    lngMax: 81.0\n  },\n  \"Rajasthan\": {\n    latMin: 23.0,\n    latMax: 30.0,\n    lngMin: 69.0,\n    lngMax: 78.0\n  },\n  \"Gujarat\": {\n    latMin: 20.0,\n    latMax: 25.0,\n    lngMin: 68.0,\n    lngMax: 75.0\n  },\n  \"Karnataka\": {\n    latMin: 11.0,\n    latMax: 18.0,\n    lngMin: 74.0,\n    lngMax: 78.0\n  },\n  \"Kerala\": {\n    latMin: 8.0,\n    latMax: 12.0,\n    lngMin: 76.0,\n    lngMax: 78.0\n  }\n  // Add more states as needed\n};\n\n// List of water bodies in India to avoid\nconst waterBodies = [{\n  latMin: 8.0,\n  latMax: 23.0,\n  lngMin: 68.0,\n  lngMax: 92.0\n},\n// Arabian Sea\n{\n  latMin: 8.0,\n  latMax: 11.0,\n  lngMin: 76.0,\n  lngMax: 79.0\n} // Bay of Bengal\n// Add more water body boundaries as needed\n];\nconst isInWater = (latitude, longitude) => {\n  return waterBodies.some(({\n    latMin,\n    latMax,\n    lngMin,\n    lngMax\n  }) => latitude >= latMin && latitude <= latMax && longitude >= lngMin && longitude <= lngMax);\n};\nconst getRandomCoordinates = state => {\n  let coordinates;\n  do {\n    const {\n      latMin,\n      latMax,\n      lngMin,\n      lngMax\n    } = stateBoundaries[state];\n    const latitude = Math.random() * (latMax - latMin) + latMin;\n    const longitude = Math.random() * (lngMax - lngMin) + lngMin;\n    coordinates = {\n      latitude,\n      longitude\n    };\n  } while (isInWater(coordinates.latitude, coordinates.longitude));\n  return coordinates;\n};\nconst MapView = () => {\n  _s();\n  const [markers, setMarkers] = useState([]);\n  const [route, setRoute] = useState([]);\n  const [randomPoints, setRandomPoints] = useState([]);\n  const handleMapClick = event => {\n    const {\n      lat,\n      lng\n    } = event.latlng;\n    if (markers.length < 2) {\n      setMarkers(prev => [...prev, {\n        latitude: lat,\n        longitude: lng\n      }]);\n    }\n  };\n  useEffect(() => {\n    // Generate random points from different states\n    const states = Object.keys(stateBoundaries);\n    const points = Array.from({\n      length: 100\n    }, () => {\n      const randomState = states[Math.floor(Math.random() * states.length)];\n      return getRandomCoordinates(randomState);\n    });\n    setRandomPoints(points);\n  }, []);\n  useEffect(() => {\n    if (markers.length === 2) {\n      const routeCoordinates = [[markers[0].latitude, markers[0].longitude], [markers[1].latitude, markers[1].longitude]];\n      setRoute(routeCoordinates);\n    }\n  }, [markers]);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [20.5937, 78.9629] // Center of India\n    ,\n    zoom: 5,\n    style: {\n      height: \"500px\",\n      width: \"100%\"\n    },\n    onClick: handleMapClick,\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"http://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), randomPoints.map((point, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [point.latitude, point.longitude],\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [\"Random Point \", index + 1, \": \", point.latitude.toFixed(4), \", \", point.longitude.toFixed(4)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }, this)), markers.map((marker, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [marker.latitude, marker.longitude],\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [\"Marker \", index + 1, \": \", marker.latitude.toFixed(4), \", \", marker.longitude.toFixed(4)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }, this)), route.length === 2 && /*#__PURE__*/_jsxDEV(Polyline, {\n      positions: route,\n      color: \"blue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_s(MapView, \"+kRsCdAkigU3KAlSAUQAgHbyw3U=\");\n_c = MapView;\nexport default MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","Popup","Polyline","L","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","stateBoundaries","latMin","latMax","lngMin","lngMax","waterBodies","isInWater","latitude","longitude","some","getRandomCoordinates","state","coordinates","Math","random","MapView","_s","markers","setMarkers","route","setRoute","randomPoints","setRandomPoints","handleMapClick","event","lat","lng","latlng","length","prev","states","Object","keys","points","Array","from","randomState","floor","routeCoordinates","center","zoom","style","height","width","onClick","children","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","map","point","index","position","toFixed","marker","positions","color","_c","$RefreshReg$"],"sources":["C:/Users/rashi/smart-traffic-management/frontend/src/components/MapView.js"],"sourcesContent":["// src/components/MapView.js\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\n// Set the default icon for the markers\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\r\n});\r\n\r\n// Define bounding boxes for various states in India\r\nconst stateBoundaries = {\r\n    \"Andhra Pradesh\": { latMin: 13.0, latMax: 19.0, lngMin: 80.0, lngMax: 84.0 },\r\n    \"Maharashtra\": { latMin: 15.0, latMax: 24.0, lngMin: 72.0, lngMax: 80.0 },\r\n    \"Uttar Pradesh\": { latMin: 26.0, latMax: 31.0, lngMin: 78.0, lngMax: 84.0 },\r\n    \"West Bengal\": { latMin: 21.0, latMax: 27.0, lngMin: 85.0, lngMax: 89.0 },\r\n    \"Tamil Nadu\": { latMin: 8.0, latMax: 14.0, lngMin: 77.0, lngMax: 81.0 },\r\n    \"Rajasthan\": { latMin: 23.0, latMax: 30.0, lngMin: 69.0, lngMax: 78.0 },\r\n    \"Gujarat\": { latMin: 20.0, latMax: 25.0, lngMin: 68.0, lngMax: 75.0 },\r\n    \"Karnataka\": { latMin: 11.0, latMax: 18.0, lngMin: 74.0, lngMax: 78.0 },\r\n    \"Kerala\": { latMin: 8.0, latMax: 12.0, lngMin: 76.0, lngMax: 78.0 },\r\n    // Add more states as needed\r\n};\r\n\r\n// List of water bodies in India to avoid\r\nconst waterBodies = [\r\n    { latMin: 8.0, latMax: 23.0, lngMin: 68.0, lngMax: 92.0 }, // Arabian Sea\r\n    { latMin: 8.0, latMax: 11.0, lngMin: 76.0, lngMax: 79.0 }, // Bay of Bengal\r\n    // Add more water body boundaries as needed\r\n];\r\n\r\nconst isInWater = (latitude, longitude) => {\r\n    return waterBodies.some(({ latMin, latMax, lngMin, lngMax }) => \r\n        latitude >= latMin && latitude <= latMax &&\r\n        longitude >= lngMin && longitude <= lngMax\r\n    );\r\n};\r\n\r\nconst getRandomCoordinates = (state) => {\r\n    let coordinates;\r\n    do {\r\n        const { latMin, latMax, lngMin, lngMax } = stateBoundaries[state];\r\n        const latitude = Math.random() * (latMax - latMin) + latMin;\r\n        const longitude = Math.random() * (lngMax - lngMin) + lngMin;\r\n        coordinates = { latitude, longitude };\r\n    } while (isInWater(coordinates.latitude, coordinates.longitude));\r\n    return coordinates;\r\n};\r\n\r\nconst MapView = () => {\r\n    const [markers, setMarkers] = useState([]);\r\n    const [route, setRoute] = useState([]);\r\n    const [randomPoints, setRandomPoints] = useState([]);\r\n\r\n    const handleMapClick = (event) => {\r\n        const { lat, lng } = event.latlng;\r\n        if (markers.length < 2) {\r\n            setMarkers((prev) => [...prev, { latitude: lat, longitude: lng }]);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Generate random points from different states\r\n        const states = Object.keys(stateBoundaries);\r\n        const points = Array.from({ length: 100 }, () => {\r\n            const randomState = states[Math.floor(Math.random() * states.length)];\r\n            return getRandomCoordinates(randomState);\r\n        });\r\n        setRandomPoints(points);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (markers.length === 2) {\r\n            const routeCoordinates = [\r\n                [markers[0].latitude, markers[0].longitude],\r\n                [markers[1].latitude, markers[1].longitude]\r\n            ];\r\n            setRoute(routeCoordinates);\r\n        }\r\n    }, [markers]);\r\n\r\n    return (\r\n        <MapContainer\r\n            center={[20.5937, 78.9629]} // Center of India\r\n            zoom={5}\r\n            style={{ height: \"500px\", width: \"100%\" }}\r\n            onClick={handleMapClick}\r\n        >\r\n            <TileLayer\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                attribution='&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n            />\r\n            {randomPoints.map((point, index) => (\r\n                <Marker key={index} position={[point.latitude, point.longitude]}>\r\n                    <Popup>\r\n                        Random Point {index + 1}: {point.latitude.toFixed(4)}, {point.longitude.toFixed(4)}\r\n                    </Popup>\r\n                </Marker>\r\n            ))}\r\n            {markers.map((marker, index) => (\r\n                <Marker key={index} position={[marker.latitude, marker.longitude]}>\r\n                    <Popup>\r\n                        Marker {index + 1}: {marker.latitude.toFixed(4)}, {marker.longitude.toFixed(4)}\r\n                    </Popup>\r\n                </Marker>\r\n            ))}\r\n            {route.length === 2 && (\r\n                <Polyline positions={route} color=\"blue\" />\r\n            )}\r\n        </MapContainer>\r\n    );\r\n};\r\n\r\nexport default MapView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}