{"ast":null,"code":"import _slicedToArray from \"C:/Users/rashi/smart-traffic-management/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\rashi\\\\smart-traffic-management\\\\frontend\\\\src\\\\components\\\\TrafficDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport MapView from './MapView';\nimport ControlPanel from './ControlPanel';\nimport Alerts from './Alerts';\nimport '../styles/TrafficDashboard.css';\nimport socket from '../services/WebSocketService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TrafficDashboard() {\n  _s();\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    trafficData = _useState2[0],\n    setTrafficData = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isLoading = _useState4[0],\n    setIsLoading = _useState4[1];\n  useEffect(function () {\n    // WebSocket message handling\n    socket.onmessage = function (event) {\n      var newTrafficData = JSON.parse(event.data);\n      setTrafficData(newTrafficData);\n    };\n\n    // Mock fetching data from a backend\n    var mockData = [{\n      location: 'Intersection A',\n      congestionLevel: 'High',\n      id: 1\n    }, {\n      location: 'Intersection B',\n      congestionLevel: 'Moderate',\n      id: 2\n    }, {\n      location: 'Intersection C',\n      congestionLevel: 'Low',\n      id: 3\n    }];\n    setTimeout(function () {\n      setTrafficData(mockData);\n      setIsLoading(false);\n    }, 2000); // Simulating a 2-second loading time\n\n    return function () {\n      socket.onmessage = null; // Cleanup\n    };\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading traffic data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"traffic-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Smart Traffic Management Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MapView, {\n      trafficData: trafficData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Alerts, {\n      trafficData: trafficData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(TrafficDashboard, \"mMgL5dQ3az3RkNHOyc7qkhmzkZM=\");\n_c = TrafficDashboard;\nexport default TrafficDashboard;\nvar _c;\n$RefreshReg$(_c, \"TrafficDashboard\");","map":{"version":3,"names":["React","useState","useEffect","MapView","ControlPanel","Alerts","socket","jsxDEV","_jsxDEV","TrafficDashboard","_s","_useState","_useState2","_slicedToArray","trafficData","setTrafficData","_useState3","_useState4","isLoading","setIsLoading","onmessage","event","newTrafficData","JSON","parse","data","mockData","location","congestionLevel","id","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/rashi/smart-traffic-management/frontend/src/components/TrafficDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport MapView from './MapView';\r\nimport ControlPanel from './ControlPanel';\r\nimport Alerts from './Alerts';\r\nimport '../styles/TrafficDashboard.css';\r\nimport socket from '../services/WebSocketService';\r\n\r\nfunction TrafficDashboard() {\r\n    const [trafficData, setTrafficData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        // WebSocket message handling\r\n        socket.onmessage = (event) => {\r\n            const newTrafficData = JSON.parse(event.data);\r\n            setTrafficData(newTrafficData);\r\n        };\r\n\r\n        // Mock fetching data from a backend\r\n        const mockData = [\r\n            { location: 'Intersection A', congestionLevel: 'High', id: 1 },\r\n            { location: 'Intersection B', congestionLevel: 'Moderate', id: 2 },\r\n            { location: 'Intersection C', congestionLevel: 'Low', id: 3 }\r\n        ];\r\n\r\n        setTimeout(() => {\r\n            setTrafficData(mockData);\r\n            setIsLoading(false);\r\n        }, 2000); // Simulating a 2-second loading time\r\n\r\n        return () => {\r\n            socket.onmessage = null; // Cleanup\r\n        };\r\n    }, []);\r\n\r\n    if (isLoading) {\r\n        return <div className=\"loading\">Loading traffic data...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"traffic-dashboard\">\r\n            <h1>Smart Traffic Management Dashboard</h1>\r\n            <MapView trafficData={trafficData} />\r\n            <ControlPanel />\r\n            <Alerts trafficData={trafficData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TrafficDashboard;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAO,gCAAgC;AACvC,OAAOC,MAAM,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACxB,IAAAC,SAAA,GAAsCV,QAAQ,CAAC,EAAE,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA3CG,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAClC,IAAAI,UAAA,GAAkCf,QAAQ,CAAC,IAAI,CAAC;IAAAgB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAzCE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAE9Bf,SAAS,CAAC,YAAM;IACZ;IACAI,MAAM,CAACc,SAAS,GAAG,UAACC,KAAK,EAAK;MAC1B,IAAMC,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACI,IAAI,CAAC;MAC7CV,cAAc,CAACO,cAAc,CAAC;IAClC,CAAC;;IAED;IACA,IAAMI,QAAQ,GAAG,CACb;MAAEC,QAAQ,EAAE,gBAAgB;MAAEC,eAAe,EAAE,MAAM;MAAEC,EAAE,EAAE;IAAE,CAAC,EAC9D;MAAEF,QAAQ,EAAE,gBAAgB;MAAEC,eAAe,EAAE,UAAU;MAAEC,EAAE,EAAE;IAAE,CAAC,EAClE;MAAEF,QAAQ,EAAE,gBAAgB;MAAEC,eAAe,EAAE,KAAK;MAAEC,EAAE,EAAE;IAAE,CAAC,CAChE;IAEDC,UAAU,CAAC,YAAM;MACbf,cAAc,CAACW,QAAQ,CAAC;MACxBP,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEV,OAAO,YAAM;MACTb,MAAM,CAACc,SAAS,GAAG,IAAI,CAAC,CAAC;IAC7B,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,SAAS,EAAE;IACX,oBAAOV,OAAA;MAAKuB,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACjE;EAEA,oBACI5B,OAAA;IAAKuB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAC9BxB,OAAA;MAAAwB,QAAA,EAAI;IAAkC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3C5B,OAAA,CAACL,OAAO;MAACW,WAAW,EAAEA;IAAY;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrC5B,OAAA,CAACJ,YAAY;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChB5B,OAAA,CAACH,MAAM;MAACS,WAAW,EAAEA;IAAY;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEd;AAAC1B,EAAA,CAxCQD,gBAAgB;AAAA4B,EAAA,GAAhB5B,gBAAgB;AA0CzB,eAAeA,gBAAgB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}