{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rashi\\\\smart-traffic-management\\\\frontend\\\\src\\\\components\\\\TrafficDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport MapView from './MapView';\nimport ControlPanel from './ControlPanel';\nimport Alerts from './Alerts';\nimport '../styles/TrafficDashboard.css';\nimport socket from '../services/WebSocketService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TrafficDashboard() {\n  _s();\n  const [trafficData, setTrafficData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    // WebSocket message handling\n    socket.onmessage = event => {\n      const newTrafficData = JSON.parse(event.data);\n      setTrafficData(newTrafficData);\n      setFilteredData(newTrafficData); // Initially, show all data\n    };\n\n    // Mock fetching data from a backend with lat/long data\n    const mockData = [{\n      location: 'Intersection A',\n      congestionLevel: 'High',\n      latitude: 28.6139,\n      longitude: 77.2090,\n      id: 1\n    }, {\n      location: 'Intersection B',\n      congestionLevel: 'Moderate',\n      latitude: 28.6149,\n      longitude: 77.2040,\n      id: 2\n    }, {\n      location: 'Intersection C',\n      congestionLevel: 'Low',\n      latitude: 28.6129,\n      longitude: 77.2100,\n      id: 3\n    }, {\n      location: 'Intersection D',\n      congestionLevel: 'High',\n      latitude: 28.6200,\n      longitude: 77.2150,\n      id: 4\n    }, {\n      location: 'Intersection E',\n      congestionLevel: 'Moderate',\n      latitude: 28.6160,\n      longitude: 77.2000,\n      id: 5\n    }];\n    setTimeout(() => {\n      setTrafficData(mockData);\n      setFilteredData(mockData); // Show all data after loading\n      setIsLoading(false);\n    }, 2000); // Simulating a 2-second loading time\n\n    return () => {\n      socket.onmessage = null; // Cleanup\n    };\n  }, []);\n  const handleFilterChange = level => {\n    if (level === '') {\n      setFilteredData(trafficData); // Show all data if no filter is selected\n    } else {\n      const filtered = trafficData.filter(data => data.congestionLevel === level);\n      setFilteredData(filtered); // Show filtered data\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading traffic data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"traffic-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Smart Traffic Management Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MapView, {\n      trafficData: filteredData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n      onFilterChange: handleFilterChange,\n      onOptimizeRoutes: () => console.log('Optimize Routes'),\n      onRefreshData: () => console.log('Refresh Data'),\n      onSendAlert: () => console.log('Send Alert')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Alerts, {\n      trafficData: filteredData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(TrafficDashboard, \"Q+qDFUDA5yPmsQrE//uXpb2PlhE=\");\n_c = TrafficDashboard;\nexport default TrafficDashboard;\nvar _c;\n$RefreshReg$(_c, \"TrafficDashboard\");","map":{"version":3,"names":["React","useState","useEffect","MapView","ControlPanel","Alerts","socket","jsxDEV","_jsxDEV","TrafficDashboard","_s","trafficData","setTrafficData","filteredData","setFilteredData","isLoading","setIsLoading","onmessage","event","newTrafficData","JSON","parse","data","mockData","location","congestionLevel","latitude","longitude","id","setTimeout","handleFilterChange","level","filtered","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onFilterChange","onOptimizeRoutes","console","log","onRefreshData","onSendAlert","_c","$RefreshReg$"],"sources":["C:/Users/rashi/smart-traffic-management/frontend/src/components/TrafficDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport MapView from './MapView';\r\nimport ControlPanel from './ControlPanel';\r\nimport Alerts from './Alerts';\r\nimport '../styles/TrafficDashboard.css';\r\nimport socket from '../services/WebSocketService';\r\n\r\nfunction TrafficDashboard() {\r\n    const [trafficData, setTrafficData] = useState([]);\r\n    const [filteredData, setFilteredData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        // WebSocket message handling\r\n        socket.onmessage = (event) => {\r\n            const newTrafficData = JSON.parse(event.data);\r\n            setTrafficData(newTrafficData);\r\n            setFilteredData(newTrafficData); // Initially, show all data\r\n        };\r\n\r\n        // Mock fetching data from a backend with lat/long data\r\n        const mockData = [\r\n            { location: 'Intersection A', congestionLevel: 'High', latitude: 28.6139, longitude: 77.2090, id: 1 },\r\n            { location: 'Intersection B', congestionLevel: 'Moderate', latitude: 28.6149, longitude: 77.2040, id: 2 },\r\n            { location: 'Intersection C', congestionLevel: 'Low', latitude: 28.6129, longitude: 77.2100, id: 3 },\r\n            { location: 'Intersection D', congestionLevel: 'High', latitude: 28.6200, longitude: 77.2150, id: 4 },\r\n            { location: 'Intersection E', congestionLevel: 'Moderate', latitude: 28.6160, longitude: 77.2000, id: 5 }\r\n        ];\r\n\r\n        setTimeout(() => {\r\n            setTrafficData(mockData);\r\n            setFilteredData(mockData); // Show all data after loading\r\n            setIsLoading(false);\r\n        }, 2000); // Simulating a 2-second loading time\r\n\r\n        return () => {\r\n            socket.onmessage = null; // Cleanup\r\n        };\r\n    }, []);\r\n\r\n    const handleFilterChange = (level) => {\r\n        if (level === '') {\r\n            setFilteredData(trafficData); // Show all data if no filter is selected\r\n        } else {\r\n            const filtered = trafficData.filter(data => data.congestionLevel === level);\r\n            setFilteredData(filtered); // Show filtered data\r\n        }\r\n    };\r\n\r\n    if (isLoading) {\r\n        return <div className=\"loading\">Loading traffic data...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"traffic-dashboard\">\r\n            <h1>Smart Traffic Management Dashboard</h1>\r\n            <MapView trafficData={filteredData} />\r\n            <ControlPanel\r\n                onFilterChange={handleFilterChange}\r\n                onOptimizeRoutes={() => console.log('Optimize Routes')}\r\n                onRefreshData={() => console.log('Refresh Data')}\r\n                onSendAlert={() => console.log('Send Alert')}\r\n            />\r\n            <Alerts trafficData={filteredData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TrafficDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}