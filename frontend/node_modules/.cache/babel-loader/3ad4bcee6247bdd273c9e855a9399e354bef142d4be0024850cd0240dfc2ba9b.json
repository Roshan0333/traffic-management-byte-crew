{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rashi\\\\smart-traffic-management\\\\frontend\\\\src\\\\components\\\\MapView.js\";\nimport React, { useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-routing-machine';\nimport L from 'leaflet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\nconst MapView = ({\n  trafficData,\n  startCoordinates,\n  endCoordinates\n}) => {\n  var _s = $RefreshSig$();\n  const RoutingControl = ({\n    start,\n    end\n  }) => {\n    _s();\n    const map = useMap();\n    useEffect(() => {\n      if (!start || !end) return;\n      const routingControl = L.Routing.control({\n        waypoints: [L.latLng(start.latitude, start.longitude), L.latLng(end.latitude, end.longitude)],\n        routeWhileDragging: true\n      }).addTo(map);\n\n      // Filter traffic data along the route (simplified logic)\n      const routeBounds = L.latLngBounds([start.latitude, start.longitude], [end.latitude, end.longitude]);\n      trafficData.forEach(data => {\n        const point = L.latLng(data.latitude, data.longitude);\n        if (routeBounds.contains(point)) {\n          L.marker([data.latitude, data.longitude]).addTo(map);\n        }\n      });\n      return () => map.removeControl(routingControl);\n    }, [start, end, map]);\n    return null;\n  };\n  _s(RoutingControl, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n    return [useMap];\n  });\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [28.6139, 77.2090],\n    zoom: 11,\n    style: {\n      height: \"500px\",\n      width: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"http://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), trafficData.map(data => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [data.latitude, data.longitude],\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: data.location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 57\n        }, this), \"Congestion Level: \", data.congestionLevel]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)\n    }, data.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this)), startCoordinates && endCoordinates && /*#__PURE__*/_jsxDEV(RoutingControl, {\n      start: startCoordinates,\n      end: endCoordinates\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_c = MapView;\nexport default MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","useEffect","MapContainer","TileLayer","Marker","Popup","useMap","L","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","MapView","trafficData","startCoordinates","endCoordinates","_s","$RefreshSig$","RoutingControl","start","end","map","routingControl","Routing","control","waypoints","latLng","latitude","longitude","routeWhileDragging","addTo","routeBounds","latLngBounds","forEach","data","point","contains","marker","removeControl","center","zoom","style","height","width","children","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","position","location","congestionLevel","id","_c","$RefreshReg$"],"sources":["C:/Users/rashi/smart-traffic-management/frontend/src/components/MapView.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport 'leaflet-routing-machine';\r\nimport L from 'leaflet';\r\n\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\r\n});\r\n\r\nconst MapView = ({ trafficData, startCoordinates, endCoordinates }) => {\r\n    const RoutingControl = ({ start, end }) => {\r\n        const map = useMap();\r\n\r\n        useEffect(() => {\r\n            if (!start || !end) return;\r\n\r\n            const routingControl = L.Routing.control({\r\n                waypoints: [\r\n                    L.latLng(start.latitude, start.longitude),\r\n                    L.latLng(end.latitude, end.longitude)\r\n                ],\r\n                routeWhileDragging: true\r\n            }).addTo(map);\r\n\r\n            // Filter traffic data along the route (simplified logic)\r\n            const routeBounds = L.latLngBounds(\r\n                [start.latitude, start.longitude],\r\n                [end.latitude, end.longitude]\r\n            );\r\n\r\n            trafficData.forEach((data) => {\r\n                const point = L.latLng(data.latitude, data.longitude);\r\n                if (routeBounds.contains(point)) {\r\n                    L.marker([data.latitude, data.longitude]).addTo(map);\r\n                }\r\n            });\r\n\r\n            return () => map.removeControl(routingControl);\r\n        }, [start, end, map]);\r\n\r\n        return null;\r\n    };\r\n\r\n    return (\r\n        <MapContainer center={[28.6139, 77.2090]} zoom={11} style={{ height: \"500px\", width: \"100%\" }}>\r\n            <TileLayer\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                attribution='&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n            />\r\n            {trafficData.map((data) => (\r\n                <Marker key={data.id} position={[data.latitude, data.longitude]}>\r\n                    <Popup>\r\n                        <strong>{data.location}</strong><br />\r\n                        Congestion Level: {data.congestionLevel}\r\n                    </Popup>\r\n                </Marker>\r\n            ))}\r\n            {startCoordinates && endCoordinates && (\r\n                <RoutingControl start={startCoordinates} end={endCoordinates} />\r\n            )}\r\n        </MapContainer>\r\n    );\r\n};\r\n\r\nexport default MapView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}