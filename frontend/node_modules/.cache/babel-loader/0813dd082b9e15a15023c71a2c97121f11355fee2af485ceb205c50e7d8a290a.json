{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rashi\\\\smart-traffic-management\\\\frontend\\\\src\\\\components\\\\TrafficDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport MapView from './MapView';\nimport ControlPanel from './ControlPanel';\nimport Alerts from './Alerts';\nimport '../styles/TrafficDashboard.css';\nimport socket from '../services/WebSocketService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TrafficDashboard() {\n  _s();\n  const [trafficData, setTrafficData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [filter, setFilter] = useState('All'); // State to hold the current filter\n\n  useEffect(() => {\n    // WebSocket message handling\n    socket.onmessage = event => {\n      const newTrafficData = JSON.parse(event.data);\n      setTrafficData(newTrafficData);\n    };\n\n    // Mock fetching data from a backend\n    const mockData = [{\n      location: 'Intersection A',\n      congestionLevel: 'High',\n      id: 1\n    }, {\n      location: 'Intersection B',\n      congestionLevel: 'Moderate',\n      id: 2\n    }, {\n      location: 'Intersection C',\n      congestionLevel: 'Low',\n      id: 3\n    }, {\n      location: 'Intersection D',\n      congestionLevel: 'High',\n      id: 4\n    }, {\n      location: 'Intersection E',\n      congestionLevel: 'Moderate',\n      id: 5\n    }, {\n      location: 'Intersection F',\n      congestionLevel: 'Low',\n      id: 6\n    }, {\n      location: 'Intersection G',\n      congestionLevel: 'High',\n      id: 7\n    }, {\n      location: 'Intersection H',\n      congestionLevel: 'Moderate',\n      id: 8\n    }, {\n      location: 'Intersection I',\n      congestionLevel: 'Low',\n      id: 9\n    }, {\n      location: 'Intersection J',\n      congestionLevel: 'High',\n      id: 10\n    }];\n    setTimeout(() => {\n      setTrafficData(mockData);\n      setIsLoading(false);\n    }, 2000); // Simulating a 2-second loading time\n\n    return () => {\n      socket.onmessage = null; // Cleanup\n    };\n  }, []);\n  const handleFilter = congestionLevel => {\n    setFilter(congestionLevel);\n  };\n  const filteredData = filter === 'All' ? trafficData : trafficData.filter(data => data.congestionLevel === filter);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading traffic data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"traffic-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Smart Traffic Management Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n      onFilter: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MapView, {\n      trafficData: filteredData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Alerts, {\n      trafficData: filteredData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(TrafficDashboard, \"5HXVCA59qEeWuADebQX7OwK8/Yg=\");\n_c = TrafficDashboard;\nexport default TrafficDashboard;\nvar _c;\n$RefreshReg$(_c, \"TrafficDashboard\");","map":{"version":3,"names":["React","useState","useEffect","MapView","ControlPanel","Alerts","socket","jsxDEV","_jsxDEV","TrafficDashboard","_s","trafficData","setTrafficData","isLoading","setIsLoading","filter","setFilter","onmessage","event","newTrafficData","JSON","parse","data","mockData","location","congestionLevel","id","setTimeout","handleFilter","filteredData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onFilter","_c","$RefreshReg$"],"sources":["C:/Users/rashi/smart-traffic-management/frontend/src/components/TrafficDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport MapView from './MapView';\r\nimport ControlPanel from './ControlPanel';\r\nimport Alerts from './Alerts';\r\nimport '../styles/TrafficDashboard.css';\r\nimport socket from '../services/WebSocketService';\r\n\r\nfunction TrafficDashboard() {\r\n    const [trafficData, setTrafficData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [filter, setFilter] = useState('All'); // State to hold the current filter\r\n\r\n    useEffect(() => {\r\n        // WebSocket message handling\r\n        socket.onmessage = (event) => {\r\n            const newTrafficData = JSON.parse(event.data);\r\n            setTrafficData(newTrafficData);\r\n        };\r\n\r\n        // Mock fetching data from a backend\r\n        const mockData = [\r\n            { location: 'Intersection A', congestionLevel: 'High', id: 1 },\r\n            { location: 'Intersection B', congestionLevel: 'Moderate', id: 2 },\r\n            { location: 'Intersection C', congestionLevel: 'Low', id: 3 },\r\n            { location: 'Intersection D', congestionLevel: 'High', id: 4 },\r\n            { location: 'Intersection E', congestionLevel: 'Moderate', id: 5 },\r\n            { location: 'Intersection F', congestionLevel: 'Low', id: 6 },\r\n            { location: 'Intersection G', congestionLevel: 'High', id: 7 },\r\n            { location: 'Intersection H', congestionLevel: 'Moderate', id: 8 },\r\n            { location: 'Intersection I', congestionLevel: 'Low', id: 9 },\r\n            { location: 'Intersection J', congestionLevel: 'High', id: 10 },\r\n        ];\r\n\r\n        setTimeout(() => {\r\n            setTrafficData(mockData);\r\n            setIsLoading(false);\r\n        }, 2000); // Simulating a 2-second loading time\r\n\r\n        return () => {\r\n            socket.onmessage = null; // Cleanup\r\n        };\r\n    }, []);\r\n\r\n    const handleFilter = (congestionLevel) => {\r\n        setFilter(congestionLevel);\r\n    };\r\n\r\n    const filteredData = filter === 'All' ? trafficData : trafficData.filter(data => data.congestionLevel === filter);\r\n\r\n    if (isLoading) {\r\n        return <div className=\"loading\">Loading traffic data...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"traffic-dashboard\">\r\n            <h1>Smart Traffic Management Dashboard</h1>\r\n            <ControlPanel onFilter={handleFilter} />\r\n            <MapView trafficData={filteredData} />\r\n            <Alerts trafficData={filteredData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TrafficDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}