{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rashi\\\\smart-traffic-management\\\\frontend\\\\src\\\\components\\\\MapView.js\";\nimport React from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\n\n// Default icon for markers\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\nconst MapView = ({\n  trafficData\n}) => {\n  const delhiCoordinates = [28.6139, 77.2090]; // Coordinates for Delhi\n\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: delhiCoordinates,\n    zoom: 13,\n    style: {\n      height: \"500px\",\n      width: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"http://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), trafficData.map(data => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [delhiCoordinates[0] + data.id * 0.01, delhiCoordinates[1]] // Adjusting marker positions based on data\n      ,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: data.location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 57\n        }, this), \"Congestion Level: \", data.congestionLevel]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)\n    }, data.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_c = MapView;\nexport default MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","MapContainer","TileLayer","Marker","Popup","L","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","MapView","trafficData","delhiCoordinates","center","zoom","style","height","width","children","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","map","data","position","id","location","congestionLevel","_c","$RefreshReg$"],"sources":["C:/Users/rashi/smart-traffic-management/frontend/src/components/MapView.js"],"sourcesContent":["import React from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\n\r\n// Default icon for markers\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\r\n});\r\n\r\nconst MapView = ({ trafficData }) => {\r\n    const delhiCoordinates = [28.6139, 77.2090]; // Coordinates for Delhi\r\n\r\n    return (\r\n        <MapContainer center={delhiCoordinates} zoom={13} style={{ height: \"500px\", width: \"100%\" }}>\r\n            <TileLayer\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                attribution='&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n            />\r\n            {trafficData.map((data) => (\r\n                <Marker \r\n                    key={data.id} \r\n                    position={[delhiCoordinates[0] + data.id * 0.01, delhiCoordinates[1]]} // Adjusting marker positions based on data\r\n                >\r\n                    <Popup>\r\n                        <strong>{data.location}</strong><br />\r\n                        Congestion Level: {data.congestionLevel}\r\n                    </Popup>\r\n                </Marker>\r\n            ))}\r\n        </MapContainer>\r\n    );\r\n};\r\n\r\nexport default MapView;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,QAAQ,eAAe;AACtE,OAAO,0BAA0B;AACjC,OAAOC,CAAC,MAAM,SAAS;;AAEvB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAOF,CAAC,CAACG,IAAI,CAACC,OAAO,CAACC,SAAS,CAACC,WAAW;AAC3CN,CAAC,CAACG,IAAI,CAACC,OAAO,CAACG,YAAY,CAAC;EACxBC,aAAa,EAAEC,OAAO,CAAC,wCAAwC,CAAC;EAChEC,OAAO,EAAED,OAAO,CAAC,qCAAqC,CAAC;EACvDE,SAAS,EAAEF,OAAO,CAAC,uCAAuC;AAC9D,CAAC,CAAC;AAEF,MAAMG,OAAO,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EACjC,MAAMC,gBAAgB,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;;EAE7C,oBACIZ,OAAA,CAACN,YAAY;IAACmB,MAAM,EAAED,gBAAiB;IAACE,IAAI,EAAE,EAAG;IAACC,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACxFlB,OAAA,CAACL,SAAS;MACNwB,GAAG,EAAC,oDAAoD;MACxDC,WAAW,EAAC;IAAwF;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvG,CAAC,EACDb,WAAW,CAACc,GAAG,CAAEC,IAAI,iBAClB1B,OAAA,CAACJ,MAAM;MAEH+B,QAAQ,EAAE,CAACf,gBAAgB,CAAC,CAAC,CAAC,GAAGc,IAAI,CAACE,EAAE,GAAG,IAAI,EAAEhB,gBAAgB,CAAC,CAAC,CAAC,CAAE,CAAC;MAAA;MAAAM,QAAA,eAEvElB,OAAA,CAACH,KAAK;QAAAqB,QAAA,gBACFlB,OAAA;UAAAkB,QAAA,EAASQ,IAAI,CAACG;QAAQ;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eAAAxB,OAAA;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,sBACpB,EAACE,IAAI,CAACI,eAAe;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC;IAAC,GANHE,IAAI,CAACE,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOR,CACX,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEvB,CAAC;AAACO,EAAA,GAtBIrB,OAAO;AAwBb,eAAeA,OAAO;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}