{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rashi\\\\smart-traffic-management\\\\frontend\\\\src\\\\components\\\\MapView.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { GoogleMap, LoadScript, Marker, DirectionsService, DirectionsRenderer } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '500px'\n};\nconst center = {\n  lat: 28.6139,\n  lng: 77.2090\n};\nconst MapView = ({\n  trafficData,\n  startCoordinates,\n  endCoordinates\n}) => {\n  _s();\n  const [directions, setDirections] = useState(null);\n  const [error, setError] = useState(null);\n  const handleDirectionsCallback = response => {\n    if (response !== null) {\n      if (response.status === 'OK') {\n        setDirections(response);\n        setError(null);\n      } else {\n        setError('Directions request failed: ' + response.status);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"YOUR_GOOGLE_MAPS_API_KEY\",\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: center,\n      zoom: 11,\n      children: [trafficData.map(data => /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: data.latitude,\n          lng: data.longitude\n        },\n        label: data.location\n      }, data.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)), startCoordinates && endCoordinates && /*#__PURE__*/_jsxDEV(DirectionsService, {\n        options: {\n          origin: {\n            lat: startCoordinates.latitude,\n            lng: startCoordinates.longitude\n          },\n          destination: {\n            lat: endCoordinates.latitude,\n            lng: endCoordinates.longitude\n          },\n          travelMode: 'DRIVING'\n        },\n        callback: handleDirectionsCallback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), directions && /*#__PURE__*/_jsxDEV(DirectionsRenderer, {\n        directions: directions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(MapView, \"mHH7Se8egZqHpq3OQ6jmQEz/hiI=\");\n_c = MapView;\nexport default MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","useState","GoogleMap","LoadScript","Marker","DirectionsService","DirectionsRenderer","jsxDEV","_jsxDEV","containerStyle","width","height","center","lat","lng","MapView","trafficData","startCoordinates","endCoordinates","_s","directions","setDirections","error","setError","handleDirectionsCallback","response","status","googleMapsApiKey","children","mapContainerStyle","zoom","map","data","position","latitude","longitude","label","location","id","fileName","_jsxFileName","lineNumber","columnNumber","options","origin","destination","travelMode","callback","className","_c","$RefreshReg$"],"sources":["C:/Users/rashi/smart-traffic-management/frontend/src/components/MapView.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n    GoogleMap,\r\n    LoadScript,\r\n    Marker,\r\n    DirectionsService,\r\n    DirectionsRenderer\r\n} from '@react-google-maps/api';\r\n\r\nconst containerStyle = {\r\n    width: '100%',\r\n    height: '500px',\r\n};\r\n\r\nconst center = {\r\n    lat: 28.6139,\r\n    lng: 77.2090\r\n};\r\n\r\nconst MapView = ({ trafficData, startCoordinates, endCoordinates }) => {\r\n    const [directions, setDirections] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    const handleDirectionsCallback = (response) => {\r\n        if (response !== null) {\r\n            if (response.status === 'OK') {\r\n                setDirections(response);\r\n                setError(null);\r\n            } else {\r\n                setError('Directions request failed: ' + response.status);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <LoadScript googleMapsApiKey=\"YOUR_GOOGLE_MAPS_API_KEY\">\r\n            <GoogleMap\r\n                mapContainerStyle={containerStyle}\r\n                center={center}\r\n                zoom={11}\r\n            >\r\n                {/* Display Traffic Markers */}\r\n                {trafficData.map((data) => (\r\n                    <Marker\r\n                        key={data.id}\r\n                        position={{ lat: data.latitude, lng: data.longitude }}\r\n                        label={data.location}\r\n                    />\r\n                ))}\r\n\r\n                {/* Request Directions if start and end points are set */}\r\n                {startCoordinates && endCoordinates && (\r\n                    <DirectionsService\r\n                        options={{\r\n                            origin: { lat: startCoordinates.latitude, lng: startCoordinates.longitude },\r\n                            destination: { lat: endCoordinates.latitude, lng: endCoordinates.longitude },\r\n                            travelMode: 'DRIVING'\r\n                        }}\r\n                        callback={handleDirectionsCallback}\r\n                    />\r\n                )}\r\n\r\n                {/* Render the route on the map */}\r\n                {directions && (\r\n                    <DirectionsRenderer\r\n                        directions={directions}\r\n                    />\r\n                )}\r\n\r\n                {/* Show error if directions request fails */}\r\n                {error && <div className=\"error\">{error}</div>}\r\n            </GoogleMap>\r\n        </LoadScript>\r\n    );\r\n};\r\n\r\nexport default MapView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}